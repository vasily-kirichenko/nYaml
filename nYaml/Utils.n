using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Globalization;
using Utils;

namespace nYaml
{
    module ValueParser {
        public Bool(text: string): option[bool] {
            mutable r = false;
            if (Boolean.TryParse(text, out r)) Some(r) else None()
        }

        public TimeSpan(text: string): option[TimeSpan] {
            mutable r: TimeSpan;
            if (TimeSpan.TryParse(text, CultureInfo.InvariantCulture, out r))
                Some(r)
            else None()
        }

    //let (|DateTime|_|) =  
    //    tryParseWith (fun x -> DateTime.TryParse(x, CultureInfo.InvariantCulture, DateTimeStyles.AssumeUniversal))

        public Uri(text: string): option[Uri] {
            def schemas = ["http", "https", "ftp", "ftps", "sftp", "amqp", "file", "ssh", "tcp"];
            if (schemas.Exists(x => text.Trim().StartsWith(x + ":", StringComparison.InvariantCultureIgnoreCase))) {
                mutable uri: Uri;
                if (Uri.TryCreate(text, UriKind.Absolute, out uri))
                    Some(uri)
                else None()
            }
            else None()
        }
    }
}
